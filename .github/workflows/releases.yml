name: Ticovan AppImage

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*'
      - '20*y'

jobs:
  build-appimage:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo apt clean
          sudo apt-get update
          sudo apt-get install -y libsdl2-2.0-0 squashfs-tools
      - name: install pyxel
        run: sudo pip3 install pyxel pyinstaller
      - name: build
        run: |
          ./build-linux.sh --appimage
      - name: Copy files
        run: |
          install -Dm755 ticoban-pyxel AppDir/usr/bin/ticoban
          mkdir -p mkdir -p AppDir/usr/share/icons/hicolor/128x128/apps/
          install -Dm644 icon.png AppDir/usr/share/icons/hicolor/128x128/apps/ticoban.png
      - name: Build AppImage
        uses: AppImageCrafters/build-appimage-action@master
        env:
          UPDATE_INFO: gh-releases-zsync|son-link|ticoban-pyxel|latest|*.AppImage.zsync
        with:
          recipe: AppImageBuilder.yml
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./*.AppImage*
